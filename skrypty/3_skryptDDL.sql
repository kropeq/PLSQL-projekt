-- autor: Micha≈Ç Jaworowski



-- Generated by Oracle SQL Developer Data Modeler 4.2.0.917
--   at:        2017-01-02 16:44:52 CET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



CREATE TABLE klasyf_druz (
    id            INTEGER NOT NULL,
    punkty        INTEGER,
    kraj_zaw_id   INTEGER NOT NULL,
    sezon_nazwa   VARCHAR2(9 CHAR) NOT NULL
);

COMMENT ON TABLE klasyf_druz IS 'Nothing';

ALTER TABLE klasyf_druz ADD CONSTRAINT klasyf_druz_pk PRIMARY KEY ( id );

CREATE TABLE klasyf_ind (
    id            INTEGER NOT NULL,
    punkty        INTEGER DEFAULT 0,
    ilosc_konk    INTEGER DEFAULT 0,
    zawodnik_id   INTEGER NOT NULL,
    sezon_nazwa   VARCHAR2(9 CHAR) NOT NULL
);

COMMENT ON TABLE klasyf_ind IS 'Nothing';

ALTER TABLE klasyf_ind ADD CONSTRAINT klasyf_ind_pk PRIMARY KEY ( id );

CREATE TABLE klub (
    id       INTEGER NOT NULL,
    nazwa    VARCHAR2(32 CHAR) NOT NULL,
    miasto   VARCHAR2(32 CHAR) NOT NULL,
    kraj     VARCHAR2(32 CHAR) NOT NULL
);

COMMENT ON TABLE klub IS 'Nothing';

ALTER TABLE klub ADD CONSTRAINT klub_pk PRIMARY KEY ( id );

CREATE TABLE klub_spon (
    sponsorzy_id   INTEGER NOT NULL,
    klub_id        INTEGER NOT NULL
);

COMMENT ON TABLE klub_spon IS 'Nothing';

ALTER TABLE klub_spon ADD CONSTRAINT klub_spon_pk PRIMARY KEY ( sponsorzy_id,klub_id );

CREATE TABLE konk_zaw (
    zawodnik_id   INTEGER NOT NULL,
    konkurs_id    INTEGER NOT NULL
);

COMMENT ON TABLE konk_zaw IS 'Nothing';

ALTER TABLE konk_zaw ADD CONSTRAINT konk_zaw_pk PRIMARY KEY ( zawodnik_id,konkurs_id );

CREATE TABLE konkurs (
    id            INTEGER NOT NULL,
    rodzaj        VARCHAR2(64 CHAR) DEFAULT 'indywidualny' NOT NULL,
    data          DATE NOT NULL,
    il_widzow     INTEGER,
    sezon_nazwa   VARCHAR2(9 CHAR) NOT NULL,
    skocznia_id   INTEGER NOT NULL
);

COMMENT ON TABLE konkurs IS 'Nothing';

ALTER TABLE konkurs ADD CONSTRAINT konkurs_pk PRIMARY KEY ( id );

CREATE TABLE kraj_zaw (
    id            INTEGER NOT NULL,
    nazwa         VARCHAR2(32 CHAR) NOT NULL,
    limit_start   INTEGER DEFAULT 4
);

COMMENT ON TABLE kraj_zaw IS 'Nothing';

ALTER TABLE kraj_zaw ADD CONSTRAINT kraj_zaw_pk PRIMARY KEY ( id );

CREATE TABLE noty (
    id             INTEGER NOT NULL,
    nota           NUMBER NOT NULL,
    wynik_ind_id   INTEGER NOT NULL
);

COMMENT ON TABLE noty IS 'Nothing';

ALTER TABLE noty ADD CONSTRAINT noty_pk PRIMARY KEY ( id );

CREATE TABLE pogoda (
    ogolnie      VARCHAR2(256 CHAR) NOT NULL,
    opady        CHAR(1) NOT NULL,
    rodzaj_op    VARCHAR2(16 CHAR),
    ilosc_op     VARCHAR2(128 CHAR),
    sila_w       VARCHAR2(128 CHAR),
    konkurs_id   INTEGER NOT NULL
);

COMMENT ON TABLE pogoda IS 'Nothing';

ALTER TABLE pogoda ADD CONSTRAINT pogoda_pk PRIMARY KEY ( konkurs_id );

CREATE TABLE przeb_wykon (
    przebudowa_id   INTEGER NOT NULL,
    wykonawca_id    INTEGER NOT NULL
);

COMMENT ON TABLE przeb_wykon IS 'Nothing';

ALTER TABLE przeb_wykon ADD CONSTRAINT przeb_wykon_pk PRIMARY KEY ( wykonawca_id,przebudowa_id );

CREATE TABLE przebudowa (
    id            INTEGER NOT NULL,
    rodzaj        VARCHAR2(512 CHAR) NOT NULL,
    ukonczono     CHAR(1) DEFAULT 'n' NOT NULL,
    data_rozp     DATE NOT NULL,
    data_ukon     DATE,
    skocznia_id   INTEGER NOT NULL
);

COMMENT ON TABLE przebudowa IS 'Nothing';

ALTER TABLE przebudowa ADD CONSTRAINT przebudowa_pk PRIMARY KEY ( id );

CREATE TABLE punktacja (
    id        INTEGER NOT NULL,
    miejsce   INTEGER NOT NULL,
    punkty    INTEGER NOT NULL
);

COMMENT ON TABLE punktacja IS 'Nothing';

ALTER TABLE punktacja ADD CONSTRAINT punktacja_pk PRIMARY KEY ( id );

CREATE TABLE rekord (
    id            INTEGER NOT NULL,
    typ           VARCHAR2(32 CHAR) DEFAULT 'zimowy' NOT NULL,
    odleglosc     NUMBER NOT NULL,
    rekordzista   VARCHAR2(64 CHAR) NOT NULL,
    data          DATE,
    belka         INTEGER,
    skocznia_id   INTEGER NOT NULL,
    aktualny      CHAR(1 CHAR) DEFAULT 't' NOT NULL
);

COMMENT ON TABLE rekord IS 'Nothing';

ALTER TABLE rekord ADD CONSTRAINT rekord_pk PRIMARY KEY ( id );

CREATE TABLE rola (
    id      INTEGER NOT NULL,
    nazwa   VARCHAR2(15 CHAR) NOT NULL
);

COMMENT ON TABLE rola IS 'Nothing';

ALTER TABLE rola ADD CONSTRAINT rola_pk PRIMARY KEY ( id );

CREATE TABLE sezon (
    nazwa         VARCHAR2(9 CHAR) NOT NULL,
    liczba_konk   INTEGER DEFAULT 0,
    rodzaj        VARCHAR2(6 CHAR)
);

COMMENT ON TABLE sezon IS 'Nothing';

ALTER TABLE sezon ADD CONSTRAINT sezon_pk PRIMARY KEY ( nazwa );

CREATE TABLE skocznia (
    id             INTEGER NOT NULL,
    nazwa          VARCHAR2(32 CHAR) NOT NULL,
    miejscowosc    VARCHAR2(32 CHAR) NOT NULL,
    kraj           VARCHAR2(32 CHAR),
    punkt_k        INTEGER NOT NULL,
    punkt_hs       INTEGER NOT NULL,
    rok_powst      DATE,
    przebudowana   CHAR(1) DEFAULT 'n'
);

COMMENT ON TABLE skocznia IS 'Nothing';

ALTER TABLE skocznia ADD CONSTRAINT skocznia_pk PRIMARY KEY ( id );

CREATE TABLE sponsorzy (
    id      INTEGER NOT NULL,
    nazwa   VARCHAR2(32 CHAR) NOT NULL
);

COMMENT ON TABLE sponsorzy IS 'Nothing';

ALTER TABLE sponsorzy ADD CONSTRAINT sponsorzy_pk PRIMARY KEY ( id );

CREATE TABLE trener (
    imie          VARCHAR2(32 CHAR) NOT NULL,
    nazwisko      VARCHAR2(32 CHAR) NOT NULL,
    od            DATE,
    do            DATE,
    kraj_zaw_id   INTEGER NOT NULL
);

COMMENT ON TABLE trener IS 'Nothing';

ALTER TABLE trener ADD CONSTRAINT trener_pk PRIMARY KEY ( kraj_zaw_id );

CREATE TABLE uzytkownik (
    id        INTEGER NOT NULL,
    login     VARCHAR2(20 CHAR) NOT NULL,
    haslo     VARCHAR2(20 CHAR) NOT NULL,
    rola_id   INTEGER DEFAULT 2 NOT NULL
);

COMMENT ON TABLE uzytkownik IS 'Nothing';

ALTER TABLE uzytkownik ADD CONSTRAINT uzytkownik_pk PRIMARY KEY ( id );

CREATE TABLE wykonawca (
    id      INTEGER NOT NULL,
    nazwa   VARCHAR2(64 CHAR) NOT NULL,
    adres   VARCHAR2(64 CHAR) NOT NULL
);

COMMENT ON TABLE wykonawca IS 'Nothing';

ALTER TABLE wykonawca ADD CONSTRAINT wykonawca_pk PRIMARY KEY ( id );

CREATE TABLE wynik_ind (
    id            INTEGER NOT NULL,
    nr_serii      INTEGER NOT NULL,
    skok          NUMBER NOT NULL,
    wiatr         NUMBER DEFAULT 0,
    pkt_wiatr     NUMBER DEFAULT 0,
    belka         INTEGER NOT NULL,
    pkt_belka     NUMBER DEFAULT 0,
    konkurs_id    INTEGER NOT NULL,
    zawodnik_id   INTEGER NOT NULL
);

COMMENT ON TABLE wynik_ind IS 'Nothing';

ALTER TABLE wynik_ind ADD CONSTRAINT wynik_ind_pk PRIMARY KEY ( id );

CREATE TABLE wynik_ind_hist (
    id              INTEGER NOT NULL,
    nr_serii        INTEGER NOT NULL,
    skok            NUMBER NOT NULL,
    wiatr           NUMBER DEFAULT 0,
    pkt_wiatr       NUMBER DEFAULT 0,
    belka           INTEGER NOT NULL,
    pkt_belka       NUMBER DEFAULT 0,
    konkurs_id      INTEGER NOT NULL,
    zawodnik_id     INTEGER NOT NULL,
    rodzaj_zmiany   VARCHAR2(32 CHAR) NOT NULL,
    data_zmiany     DATE NOT NULL
);

COMMENT ON TABLE wynik_ind_hist IS 'Nothing';

ALTER TABLE wynik_ind_hist ADD CONSTRAINT wynik_ind_hist_pk PRIMARY KEY ( data_zmiany,id );

CREATE TABLE zawodnik (
    id            INTEGER NOT NULL,
    imie          VARCHAR2(32 CHAR) NOT NULL,
    nazwisko      VARCHAR2(32 CHAR) NOT NULL,
    klub_id       INTEGER NOT NULL,
    kraj_zaw_id   INTEGER NOT NULL
);

COMMENT ON TABLE zawodnik IS 'Nothing';

ALTER TABLE zawodnik ADD CONSTRAINT zawodnik_pk PRIMARY KEY ( id );

CREATE TABLE zwyciezcy (
    id            INTEGER NOT NULL,
    imie          VARCHAR2(32 CHAR) NOT NULL,
    nazwisko      VARCHAR2(32 CHAR) NOT NULL,
    miejscowosc   VARCHAR2(32 CHAR) NOT NULL,
    sezon         VARCHAR2(9 CHAR) NOT NULL,
    data          DATE NOT NULL
);

COMMENT ON TABLE zwyciezcy IS 'Nothing';

ALTER TABLE zwyciezcy ADD CONSTRAINT zwyciezcy_pk PRIMARY KEY ( id );

ALTER TABLE klasyf_druz ADD CONSTRAINT klasyf_druz_kraj_zaw_fk FOREIGN KEY ( kraj_zaw_id )
    REFERENCES kraj_zaw ( id );

ALTER TABLE klasyf_druz ADD CONSTRAINT klasyf_druz_sezon_fk FOREIGN KEY ( sezon_nazwa )
    REFERENCES sezon ( nazwa );

ALTER TABLE klasyf_ind ADD CONSTRAINT klasyf_ind_sezon_fk FOREIGN KEY ( sezon_nazwa )
    REFERENCES sezon ( nazwa );

ALTER TABLE klasyf_ind ADD CONSTRAINT klasyf_ind_zawodnik_fk FOREIGN KEY ( zawodnik_id )
    REFERENCES zawodnik ( id );

ALTER TABLE klub_spon ADD CONSTRAINT klub_spon_klub_fk FOREIGN KEY ( klub_id )
    REFERENCES klub ( id );

ALTER TABLE klub_spon ADD CONSTRAINT klub_spon_sponsorzy_fk FOREIGN KEY ( sponsorzy_id )
    REFERENCES sponsorzy ( id );

ALTER TABLE konk_zaw ADD CONSTRAINT konk_zaw_konkurs_fk FOREIGN KEY ( konkurs_id )
    REFERENCES konkurs ( id );

ALTER TABLE konk_zaw ADD CONSTRAINT konk_zaw_zawodnik_fk FOREIGN KEY ( zawodnik_id )
    REFERENCES zawodnik ( id );

ALTER TABLE konkurs ADD CONSTRAINT konkurs_sezon_fk FOREIGN KEY ( sezon_nazwa )
    REFERENCES sezon ( nazwa );

ALTER TABLE konkurs ADD CONSTRAINT konkurs_skocznia_fk FOREIGN KEY ( skocznia_id )
    REFERENCES skocznia ( id );

ALTER TABLE noty ADD CONSTRAINT noty_wynik_ind_fk FOREIGN KEY ( wynik_ind_id )
    REFERENCES wynik_ind ( id );

ALTER TABLE pogoda ADD CONSTRAINT pogoda_konkurs_fk FOREIGN KEY ( konkurs_id )
    REFERENCES konkurs ( id );

ALTER TABLE przeb_wykon ADD CONSTRAINT przeb_wykon_przebudowa_fk FOREIGN KEY ( przebudowa_id )
    REFERENCES przebudowa ( id );

ALTER TABLE przeb_wykon ADD CONSTRAINT przeb_wykon_wykonawca_fk FOREIGN KEY ( wykonawca_id )
    REFERENCES wykonawca ( id );

ALTER TABLE przebudowa ADD CONSTRAINT przebudowa_skocznia_fk FOREIGN KEY ( skocznia_id )
    REFERENCES skocznia ( id );

ALTER TABLE rekord ADD CONSTRAINT rekord_skocznia_fk FOREIGN KEY ( skocznia_id )
    REFERENCES skocznia ( id );

ALTER TABLE trener ADD CONSTRAINT trener_kraj_zaw_fk FOREIGN KEY ( kraj_zaw_id )
    REFERENCES kraj_zaw ( id );

ALTER TABLE uzytkownik ADD CONSTRAINT uzytkownik_rola_fk FOREIGN KEY ( rola_id )
    REFERENCES rola ( id );

ALTER TABLE wynik_ind ADD CONSTRAINT wynik_ind_konkurs_fk FOREIGN KEY ( konkurs_id )
    REFERENCES konkurs ( id );

ALTER TABLE wynik_ind ADD CONSTRAINT wynik_ind_zawodnik_fk FOREIGN KEY ( zawodnik_id )
    REFERENCES zawodnik ( id );

ALTER TABLE zawodnik ADD CONSTRAINT zawodnik_klub_fk FOREIGN KEY ( klub_id )
    REFERENCES klub ( id );

ALTER TABLE zawodnik ADD CONSTRAINT zawodnik_kraj_zaw_fk FOREIGN KEY ( kraj_zaw_id )
    REFERENCES kraj_zaw ( id );

CREATE SEQUENCE klasyf_druz_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER klasyf_druz_id_trg BEFORE
    INSERT ON klasyf_druz
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := klasyf_druz_id_seq.nextval;
END;
/

CREATE SEQUENCE klasyf_ind_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER klasyf_ind_id_trg BEFORE
    INSERT ON klasyf_ind
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := klasyf_ind_id_seq.nextval;
END;
/

CREATE SEQUENCE klub_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER klub_id_trg BEFORE
    INSERT ON klub
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := klub_id_seq.nextval;
END;
/

CREATE SEQUENCE konkurs_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER konkurs_id_trg BEFORE
    INSERT ON konkurs
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := konkurs_id_seq.nextval;
END;
/

CREATE SEQUENCE kraj_zaw_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER kraj_zaw_id_trg BEFORE
    INSERT ON kraj_zaw
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := kraj_zaw_id_seq.nextval;
END;
/

CREATE SEQUENCE noty_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER noty_id_trg BEFORE
    INSERT ON noty
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := noty_id_seq.nextval;
END;
/

CREATE SEQUENCE przebudowa_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER przebudowa_id_trg BEFORE
    INSERT ON przebudowa
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := przebudowa_id_seq.nextval;
END;
/

CREATE SEQUENCE punktacja_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER punktacja_id_trg BEFORE
    INSERT ON punktacja
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := punktacja_id_seq.nextval;
END;
/

CREATE SEQUENCE rekord_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER rekord_id_trg BEFORE
    INSERT ON rekord
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := rekord_id_seq.nextval;
END;
/

CREATE SEQUENCE rola_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER rola_id_trg BEFORE
    INSERT ON rola
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := rola_id_seq.nextval;
END;
/

CREATE SEQUENCE skocznia_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER skocznia_id_trg BEFORE
    INSERT ON skocznia
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := skocznia_id_seq.nextval;
END;
/

CREATE SEQUENCE sponsorzy_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER sponsorzy_id_trg BEFORE
    INSERT ON sponsorzy
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := sponsorzy_id_seq.nextval;
END;
/

CREATE SEQUENCE uzytkownik_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER uzytkownik_id_trg BEFORE
    INSERT ON uzytkownik
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := uzytkownik_id_seq.nextval;
END;
/

CREATE SEQUENCE wykonawca_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER wykonawca_id_trg BEFORE
    INSERT ON wykonawca
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := wykonawca_id_seq.nextval;
END;
/

CREATE SEQUENCE wynik_ind_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER wynik_ind_id_trg BEFORE
    INSERT ON wynik_ind
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := wynik_ind_id_seq.nextval;
END;
/

CREATE SEQUENCE wynik_ind_hist_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER wynik_ind_hist_id_trg BEFORE
    INSERT ON wynik_ind_hist
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := wynik_ind_hist_id_seq.nextval;
END;
/

CREATE SEQUENCE zawodnik_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER zawodnik_id_trg BEFORE
    INSERT ON zawodnik
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := zawodnik_id_seq.nextval;
END;
/

CREATE SEQUENCE zwyciezcy_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER zwyciezcy_id_trg BEFORE
    INSERT ON zwyciezcy
    FOR EACH ROW
    WHEN (
        new.id IS NULL
    )
BEGIN
    :new.id := zwyciezcy_id_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            24
-- CREATE INDEX                             0
-- ALTER TABLE                             46
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                          18
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                         18
-- CREATE MATERIALIZED VIEW                 0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0










ALTER TABLE klub ADD CONSTRAINT klub_unique UNIQUE ( nazwa );
ALTER TABLE konkurs ADD CONSTRAINT konkurs_check CHECK ( rodzaj IN ('indywidualny','druzynowy','kwalifikacje'));
ALTER TABLE kraj_zaw ADD CONSTRAINT kraj_zaw_unique UNIQUE ( nazwa );
ALTER TABLE kraj_zaw ADD CONSTRAINT kraj_zaw_check CHECK ( limit_start BETWEEN 2 AND 7 );
ALTER TABLE noty ADD CONSTRAINT noty_check CHECK ((MOD(nota,0.5)=0.0) AND (nota BETWEEN 0.0 AND 20.0));
ALTER TABLE przebudowa ADD CONSTRAINT przebudowa_check CHECK ( ukonczono IN ('t','n'));
ALTER TABLE rekord ADD CONSTRAINT rekord_typ_check CHECK ( typ IN ('zimowy','letni'));
ALTER TABLE rekord ADD CONSTRAINT rekord_odl_check CHECK ( (MOD(odleglosc,0.5)=0.0) AND (odleglosc BETWEEN 0.0 AND 260.0));
ALTER TABLE sponsorzy ADD CONSTRAINT sponsorzy_unique UNIQUE ( nazwa );
ALTER TABLE skocznia ADD CONSTRAINT skocznia_unique UNIQUE ( nazwa );
ALTER TABLE skocznia ADD CONSTRAINT skocznia_pkt_k_check CHECK ( punkt_k BETWEEN 90 AND 200 );
ALTER TABLE skocznia ADD CONSTRAINT skocznia_pkt_hs_check CHECK ( punkt_hs BETWEEN 97 AND 225 );
ALTER TABLE skocznia ADD CONSTRAINT skocznia_przebud_check CHECK ( przebudowana IN ('t','n'));
ALTER TABLE wykonawca ADD CONSTRAINT wykonawca_unique UNIQUE ( nazwa );
ALTER TABLE wynik_ind ADD CONSTRAINT wynik_ind_seria_check CHECK ( nr_serii BETWEEN 0 AND 2 );
ALTER TABLE wynik_ind_hist ADD CONSTRAINT wynik_ind_hist_check CHECK ( rodzaj_zmiany IN ('update','delete'));
ALTER TABLE sezon ADD CONSTRAINT sezon_liczba_konk_check CHECK ( liczba_konk >= 0 );
ALTER TABLE sezon ADD CONSTRAINT sezon_nazwa_check CHECK ( LENGTH(nazwa) = 9 OR LENGTH(nazwa) = 4);
ALTER TABLE sezon ADD CONSTRAINT sezon_rodzaj_check CHECK ( rodzaj IN ('zimowy','letni'));
ALTER TABLE uzytkownik ADD CONSTRAINT uzytkownik_unique UNIQUE ( login );
ALTER TABLE rola ADD CONSTRAINT rola_unique UNIQUE ( nazwa );




